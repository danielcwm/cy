[{"C:\\Users\\choiw\\Desktop\\Chelsy\\project-valentine\\src\\index.js":"1","C:\\Users\\choiw\\Desktop\\Chelsy\\project-valentine\\src\\App.js":"2","C:\\Users\\choiw\\Desktop\\Chelsy\\project-valentine\\src\\Card.js":"3","C:\\Users\\choiw\\Desktop\\Chelsy\\project-valentine\\src\\reportWebVitals.js":"4"},{"size":500,"mtime":1611471221831,"results":"5","hashOfConfig":"6"},{"size":157,"mtime":1611480951084,"results":"7","hashOfConfig":"6"},{"size":12479,"mtime":1611484128329,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":1611471221831,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"105saj2",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\choiw\\Desktop\\Chelsy\\project-valentine\\src\\index.js",[],"C:\\Users\\choiw\\Desktop\\Chelsy\\project-valentine\\src\\App.js",[],"C:\\Users\\choiw\\Desktop\\Chelsy\\project-valentine\\src\\Card.js",["19","20"],"import { CameraOutlined, FrownOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport * as htmlToImage from \"html-to-image\";\r\nimport download from \"downloadjs\";\r\nimport chelsyProfile from \"./big-head.jpg\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\n\r\nconst Card = () => {\r\n  const [currentStep, setStep] = useState(0);\r\n  const [food, setFood] = useState(null);\r\n  const [rejectCounter, setCounter] = useState(99);\r\n  const wrongResponse = [\r\n    \"Um.... Ok\",\r\n    \"You're right! Always\",\r\n    \"Well, everything has 2 sides\",\r\n  ];\r\n\r\n  const steps = [\r\n    {\r\n      q:\r\n        \"There will be about 10 questions for you to complete the intelligence test.\",\r\n      a: (\r\n        <button onClick={() => setStep((prev) => prev + 1)} className=\"btnNext\">\r\n          Sure\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      q: \"Your Gender?\",\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            Male\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            Female\r\n          </button>\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            Not Sure\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      q: \"1 + 1 = ?\",\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            2\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            11\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      q: (\r\n        <p style={{ display: \"inline\" }}>\r\n          Which number should come next in the pattern? &nbsp;{\" \"}\r\n          <span>2, 4, 6, 8</span>\r\n        </p>\r\n      ),\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            10\r\n          </button>\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            12\r\n          </button>\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            16\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            0\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      q: (\r\n        <p style={{ display: \"inline\" }}>\r\n          Which number should come next in the pattern? &nbsp;{\" \"}\r\n          <span>2, 4, 6, 8</span>\r\n        </p>\r\n      ),\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            10\r\n          </button>\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            12\r\n          </button>\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            16\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            0\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      q: (\r\n        <p style={{ display: \"inline\" }}>\r\n          Which number should come next in the pattern? &nbsp;{\" \"}\r\n          <span>1, 3, 5 </span>\r\n        </p>\r\n      ),\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            0\r\n          </button>\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            7\r\n          </button>\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            11\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            I don't know\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      q: (\r\n        <p style={{ display: \"inline\" }}>\r\n          Which item should come next in the pattern? &nbsp;{\" \"}\r\n          <span>Japanese, Korean, </span>\r\n        </p>\r\n      ),\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            Italy\r\n          </button>\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            Italian\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      q: (\r\n        <p style={{ display: \"inline\" }}>\r\n          Which item should come next in the pattern? &nbsp;{\" \"}\r\n          <span>Chelsy, </span>\r\n        </p>\r\n      ),\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            onClick={() => {\r\n              NotificationManager.error(<FrownOutlined />);\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            Li\r\n          </button>\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            Choi\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      q: \"Food you preferred?\",\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            onClick={() => {\r\n              setFood(\"Vietnamese\");\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            Vietnamese\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              setFood(\"Vietnamese\");\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            Korean\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setFood(\"Vietnamese\");\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            German\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setFood(\"Vietnamese\");\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            Japanese\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setFood(\"Vietnamese\");\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            American\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setFood(\"Surprise Me\");\r\n              setStep((prev) => prev + 1);\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            Surprise Me -> not recommended\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      q: \"What's Daniel's favorite food?\",\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            Japanese BBQ\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n\r\n    {\r\n      q: (\r\n        <div>\r\n          <span>Will you go on a date with me on valentines day ;)</span>\r\n          <br />\r\n          <span style={{ fontSize: \"0.6em\" }}>\r\n            Maybe just dinner cuz you might need to work?\r\n          </span>\r\n        </div>\r\n      ),\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            Yes\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            Sure\r\n          </button>\r\n          <button\r\n            onClick={() => setStep((prev) => prev + 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            I LOVE to\r\n          </button>\r\n          <button\r\n            onClick={() => setCounter((prev) => prev - 1)}\r\n            className=\"btnNext\"\r\n          >\r\n            {rejectCounter < 99\r\n              ? `Press ${rejectCounter} times to reject me`\r\n              : \"Um...\"}\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      q: (\r\n        <span style={{ fontSize: \"0.5em\" }}>\r\n          Screenshot this and send back to me to make the reservation with me.\r\n        </span>\r\n      ),\r\n      a: (\r\n        <div className=\"btnGroup\">\r\n          <button\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"0\",\r\n            }}\r\n            onClick={() => {\r\n              htmlToImage\r\n                .toPng(document.getElementById(\"root\"))\r\n                .then(function (dataUrl) {\r\n                  download(dataUrl, \"date-with-daniel.png\");\r\n                });\r\n            }}\r\n            className=\"btnNext\"\r\n          >\r\n            Screenshot&nbsp;\r\n            <CameraOutlined />\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  useEffect(() => NotificationManager.error(\"test\"), []);\r\n  return (\r\n    <div className=\"App-container\">\r\n      <NotificationContainer />\r\n\r\n      {currentStep !== steps.length - 1 ? (\r\n        <>\r\n          {\" \"}\r\n          <h2\r\n            style={{\r\n              fontWeight: \"100\",\r\n              margin: \"auto\",\r\n              width: \"80vw\",\r\n              position: \"absolute\",\r\n              top: \"38%\",\r\n            }}\r\n          >\r\n            {steps[currentStep].q}\r\n          </h2>\r\n          <div className=\"btnContainer\"> {steps[currentStep].a}</div>\r\n          {currentStep > 1 ? (\r\n            <button\r\n              className=\"btnNext\"\r\n              onClick={() => setStep((prev) => prev - 1)}\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: \"0\",\r\n                left: \"0\",\r\n                background: \"#38466387\",\r\n              }}\r\n            >\r\n              Back\r\n            </button>\r\n          ) : null}\r\n        </>\r\n      ) : (\r\n        <div id=\"result\">\r\n          {\" \"}\r\n          <img\r\n            src={chelsyProfile}\r\n            style={{\r\n              width: \"180px\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          />{\" \"}\r\n          <br />\r\n          <span style={{ fontSize: \"2em\" }}>Congrats Chelsy!</span> <br />\r\n          <p style={{ fontSize: \"0.6em\" }}>\r\n            <span>Food Preferred:</span> {food}\r\n          </p>\r\n          <p style={{ fontSize: \"0.6em\" }}>\r\n            <span>Intelligent Test:</span> Unidentified\r\n          </p>\r\n          <div className=\"btnGroup\">\r\n            <span\r\n              style={{\r\n                fontSize: \"0.7em\",\r\n                position: \"absolute\",\r\n                bottom: \"0\",\r\n                left: \"8px\",\r\n              }}\r\n            >\r\n              Screenshot this and send it back to me to make the reservation\r\n              with me.\r\n            </span>{\" \"}\r\n            <button\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: \"0\",\r\n                right: \"0\",\r\n              }}\r\n              onClick={() => {\r\n                htmlToImage\r\n                  .toPng(document.getElementById(\"root\"))\r\n                  .then(function (dataUrl) {\r\n                    download(dataUrl, \"date-with-daniel.png\");\r\n                  });\r\n              }}\r\n              className=\"btnNext\"\r\n            >\r\n              Screenshot&nbsp;\r\n              <CameraOutlined />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\choiw\\Desktop\\Chelsy\\project-valentine\\src\\reportWebVitals.js",[],{"ruleId":"21","severity":1,"message":"22","line":17,"column":9,"nodeType":"23","messageId":"24","endLine":17,"endColumn":22},{"ruleId":"25","severity":1,"message":"26","line":431,"column":11,"nodeType":"27","endLine":437,"endColumn":13},"no-unused-vars","'wrongResponse' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]